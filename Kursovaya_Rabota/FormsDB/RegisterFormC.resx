<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAZ+fnwifn58QpqamF6enpyClpaUloqKiLKWlpTaioqI3oqKiN6Sk
        pDulpaVKpKSkTKSkpEykpKRMpKSkTKSkpEykpKRMpKSkTKSkpEylpaVKpKSkO6KiojeioqI3oKCgNqOj
        oyqenp4lpKSkH6KiohaZmZkPkZGRBwAAAACmpqYapKSkdKOjo5+jo6O3pKSkx6Ojo9Gjo6PXpKSk4aOj
        o+Sjo6Pko6Oj5aSkpOyjo6Puo6Oj8KOjo/Cjo6Pwo6Oj8KOjo/CkpKTvo6Oj7qSkpOyjo6Plo6Oj5KSk
        pOOjo6PgpKSk1aSkpNCjo6PFo6OjtaSkpJukpKRrqqqqEpGRkQegoKAjrq6uRszMzM3S0tPy1NTU9dTU
        1fbU1NX41tbX+dfX1/nX19j52NjY+djY2PrY2Nj719fX/NfX1/zX19f81tbX/NfX1/vW1tf61tbW+dXV
        1vnT09P50tLS+dDQ0fbExMTHo6OjZKOjo1GlpaVHo6OjNaSkpB+/v78EAAAAAAAAAADY2Nim2dna/9vb
        2//c3Nz/3d3e/97e3//f3+D/4ODh/+Hh4f/h4eL/4uLi/+Li4v/i4uL/4uLi/+Hh4v/h4eH/4ODh/+Dg
        4P/f39//3t7e/93d3f/b29z/2trb/9jY2f/W1thrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANra
        2uva2tv/3Nzd/93d3v/f39//4ODg/+Hh4f/i4uL/4uLj/+Pj4//j4+T/4+Pk/+Pj5P/j4+T/4+Pk/+Pj
        4//i4uL/4eHi/+Dg4f/f3+D/3t7f/93d3f/b29z/2tra/9jY2LIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA29vb7tzc3P/Z19b/pJSB/6SUgf+klIH/pJSB/6SUgf+klIH/pJSB/6SUgf+klIH/pJSB/6SU
        gf+klIH/taqc/8fHx//j4+P/4uLi/+Hh4f/g4OD/3t7f/93d3f/b29z/2dnatwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADc3Nzu3d3e/97e3//Y1dP/2dbU/9rY1f/b2Nb/29nX/9za2P/d2tj/3dvZ/93b
        2f/d29n/3dvZ/93b2P/g3t3/X19f/0hISP+oqqv/4uLj/+Hh4f/g4OD/3t7f/9zc3f/a2ty3AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAN3d3e7e3t//4ODg/+Hh4v/j4+P/5OTk/+Xl5f/m5ub/5+fn/+fn
        6P/o6Oj/6Ojo/+jo6P/o6Oj/6Ojo/+fn5/92dnb/Iygq/5e3xf/I5vL/2ebq/+Dh4v/f3+D/3t7e/9zc
        3bcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3t7e7uDg4P/e3d3/tqud/7ernf+3q53/t6ye/7es
        nv+4rJ7/uKye/7isnv+4rJ//uKyf/7isn/+4rJ7/uKye/5yjov+hz+j/st3y/7zi8//E5/T/itHu/9je
        4f/f39//3d3dtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADf39/u4eHh/+Dg4P/Gvrb/xr+3/8fA
        uP/Iwbj/ycK5/8nCuv/Kw7r/ysO6/8rDuv/Kw7v/ysO6/8rDuv/Kwrr/wMfI/5/S7/+p2PH/ptry/3DJ
        8v9Nve//cMXo/+Dg4P/e3t63AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOHh4e7i4uL/4+Pk/+Xl
        5f/m5uf/6Ojo/+np6f/q6ur/6+vr/+vr6//s7Oz/7Ozs/+zs7P/s7Oz/7Ozs/+vr6//k6Ov/ls7u/4TM
        7/9pxvP/Rbvu/1jA8f8+uez/k83k/97e4LcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4uLi7uLi
        4//l5eX/5uXi/+Th3v/l4t//5uPg/+fk4P/o5eL/7Ozr/+3t7f/t7e3/7e3t/+3t7f/t7e3/7Ozs/+vr
        7P+Dyu7/KrPp/1G/8P9Mve//O7js/0u97/8zter/pdHjtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADi4uPu4+Pk/9XSvf+Vdzf/iFwg/4hcIP+JXSH/iFwg/4hdIP+ypWz/7u7u/+/v7//v7+//7+/v/+/v
        7//u7u7/7e3t/9Hl7v9VwPD/KrPp/1C+7/8yter/Obfs/zy47P8jsOfkDqriEgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOPj4+7k5OT/0Myy/6WOT/+QZCL/lnAw/6uZW/+RZCP/lW0t/7OobP/v7+//wLaq/5eE
        bv+XhG7/l4Ru/5eEbf+XhG3/l4Rt/4aiqP9Nve//LrTq/0K67f8cr+f/O7js/y206v8Tree1AP//AQAA
        AAAAAAAAAAAAAAAAAAAAAAAA5OTk7uXl5f/U0Ln/u7J8/7CdY/+pjk//p4pJ/6uRVP+4rXf/vbSA//Dw
        8P/w8PD/8fHx//Dw8P/w8PD/7+/v/+7u7//t7e7/7Ozs/5jU8f9Hu+7/MrXq/yuz6f8Wreb/Nrbr/x2v
        5/8OquR8AAAAAAAAAAAAAAAAAAAAAAAAAADk5OTu5eXl/9fUv//Cuor/uadw/55wJf+ecCX/pH02/8K6
        iv/Du43/8fHx/8G3qv+XhW7/l4Vu/5eFbv+XhW7/l4Vu/5eFbv+XhW7/k4Vw/3C52/9Buu3/L7Tq/xat
        5v8br+f/N7Xn/5TA0f6zs8ZRAAAAAAAAAAAAAAAAAAAAAOTk5e7l5eb/29fF/8nAlv+7pGv/o3Ym/6N2
        Jv+meSr/ycCW/8rCmf/y8vL/8vLy//Ly8v/y8vL/8fHx//Dw8P/v7/D/7u7u/+3t7f/r6+z/2OXs/27H
        8/89uOz/IbDo/zy35f/H2OD/fHy6/xISlucKCp8YAAAAAAAAAAAAAAAA5eXl7ubm5v/d2sn/zcaf/8q/
        lf+whzv/q34s/7ufYP/Nxp//z8ei//Ly8v/Uzcb/u6+h/7uvof+6r6H/uq+h/7quoP+5rqD/ua6g/8zF
        vf/q6uv/w9/u/2XE8/97xeT/zM/a/09Pq/8REZj/ExOf/xgYq3QAAAAAAAAAAAAAAADl5eXu5ubm/+De
        0P/Tzav/0sup/9DIo//NwZj/0sup/9LLqf/W0LH/8/Pz/+Le2v/UzcX/083F/9PMxP/SzMT/0cvD/9HK
        wv/PycH/2tbR/+rq6//p6en/w9Pc/6Ojvv8pKZz/EhKa/xUVpP8jI7irJyfEDQAAAAAAAAAAAAAAAOXl
        5e7m5ub/6Ofm/+Pg1P/k4dX/5eLW/+Xj1//m49f/5uTY/+rp4f/z8/P/8/Pz//T09P/z8/P/8vLy//Hx
        8f/w8PD/7+/v/+7u7v/s7Oz/6+vr/+np6f/l5eX/R0ey/xISnP8ZGan6Jia/cAAAAAAAAAAAAAAAAAAA
        AAAAAAAA5eXl7ubm5v/o6Oj/6urq/+vr6//t7e3/7u7u/+/v8P/x8fH/8vLy//Ly8//z8/P/8/Pz//Pz
        8//y8vL/8fHx//Dw8P/v7+//7u7u/+zs7P/q6uv/6enp/+fn5//MzN//VlbD5iwsxDkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADOxKru0MSr/9HGrP/Sx63/08iu/9TJsP/VyrD/1sux/9fMsv/YzLP/2M2z/9jN
        s//YzbP/2M2z/9jNs//XzLP/18uy/9bLsf/VyrD/1Mmv/9PHrv/Sxq3/0MWs/8/Eqv/Ow6q3AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKuFNO6ihjz/QqCq/2eWf/+rhTT/q4U0/6uFNP+rhTT/q4U0/6uF
        NP+rhTT/q4U0/6uFNP+rhTT/q4U0/6uFNP+rhTT/q4U0/6uFNP+rhTT/q4U0/6uFNP+rhTT/q4U0/6uF
        M7cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw51P44WVcv8An+z/EaHd/7yUQ/+8lEP/vJRD/7yU
        Q/+8lEP/vJRD/7yUQ/+8lEP/vJRD/7yUQ/+8lEP/vJRD/7yUQ/+8lEP/vJRD/7yUQ/+8lEP/vJRD/7yU
        Q/+8lEP/xaBVqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADbuHJtz7Ju/lyosP+IqY//0KZY/9Cm
        WP/Qplj/0KZY/9CmWP/Qplj/0KZY/9CmWP/Qplj/0KZY/9CmWP/Qplj/0KZY/9CmWP/Qplj/0KZY/9Cm
        WP/Qplj/0ahb/9m1bPbYtXA7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkuW8w7dCMV+3Q
        jFft0IxX7dCMV+3QjFft0IxX7dCMV+3QjFft0IxX7dCMV+3QjFft0IxX7dCMV+3QjFft0IxX7dCMV+3Q
        jFft0IxX7dCMV+3QjFfqzIhW1LJmHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////8AAAABAAAAAAAAAADAAAAfwAAAH8AAAB/AAAAfwAAAH8AA
        AB/AAAAfwAAAH8AAAB/AAAAPwAAAB8AAAAfAAAADwAAAAcAAAAHAAAABwAAAB8AAAA/AAAAfwAAAH8AA
        AB/AAAAf4AAAP/////////////////////8=
</value>
  </data>
</root>